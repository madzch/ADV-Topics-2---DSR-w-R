err_data%>%
ggplot(aes(x = error_2_df, y = ... 1,color = group ))+
err_data <- bind_rows(e2_err, e5_err)%>%
bind_rows(e15_err)
err_data <- err_data%>% rename( "error_type" = `<NA>`)
library(tidyverse)
library(ggdist)
knitr::opts_chunk$set(echo = FALSE,root.dir = '~/GitHub/ADV-Topics-2---DSR-w-R/Data Exercise/DE3')
desc <- read_csv('data/desc_all.csv')
e2_err <- read_csv('data/e2_error_df.csv')
e5_err<- read_csv('data/e5_error_df.csv')
e15_err<- read_csv('data/e15_error_df.csv')
desc%>%
ggplot(aes(y = no_categories))+
geom_histogram(binwidth = 1,
color = "white",
fill = "black")
desc%>%
ggplot(aes(y = no_categories))+#because we are creating a histogram
geom_histogram() +
facet_grid(~group_name)
desc%>%
distinct(group_name)
desc%>%
count(group_name) #this is counting the number of rows.
desc%>%
filter(is.na(group_name) == FALSE)%>%
mutate(full_group_name = case_when(group_name == "south_asian" ~ "South Asian",
group_name == "se_asian" ~ "Southeast Asian",
group_name == "non_asian_multi" ~ "Non-Asian Multilingual",
group_name == "eng_mono" ~ "English monolingual diverse",
group_name == "east_asian" ~ "East Asian"),
full_group_name = factor(full_group_name,
levels = rev(c("English monolingual diverse",
"Non-Asian Multilingual",
"South Asian",
"Southeast Asian",
"East Asian"))))%>%
ggplot(aes(y = full_group_name,
x = no_categories,
fill = full_group_name,
fct_rev(full_group_name)
)) +
geom_boxplot( color = "black") +
xlim(0,15) +
labs(x = "Number of Categories",
y = "Group Name",
title = "Average Number of Categories Created per group") +
theme_minimal()+
theme(legend.position = "none") +
scale_fill_viridis_d(option = "plasma")
#we need to re-order the categories using "factor".
#annotate (geom = "text", y= 1, x = 17.5, ) .... sd was calculated in an earlier chunk. *
e2_err
e15_err
e5_err
err_data <- bind_rows(e2_err, e5_err)%>%
bind_rows(e15_err)
err_data%>%
ggplot(aes(x = error_2_df, y = ... 1,color = group ))+
err_data%>%
ggplot(aes(x = error_2_df, y = error_type,color = group ))+
stat_summary(fun.data = mean_se, geom = "pointrange", position = position_dodge(0.7)) #dodge meaning right next to each other
#had to rename the blank column in the data to "error_type" manually
install.packages("readxl")
getwd()
library(ggplot2)
library(dplyr)
knitr::opts_chunk$set(echo = FALSE,root.dir = '~/GitHub/ADV-Topics-2---DSR-w-R/Final Project Materials')
library(ggplot2)
library(dplyr)
library(readxl)
knitr::opts_chunk$set(echo = FALSE,root.dir = '~/GitHub/ADV-Topics-2---DSR-w-R/Final Project Materials')
data <- readxl::read_excel("MaterialData/SegmentationData")
library(ggplot2)
library(dplyr)
library(readxl)
knitr::opts_chunk$set(echo = FALSE,root.dir = '~/GitHub/ADV-Topics-2---DSR-w-R/Final Project Materials')
data <- readxl::read_excel("MaterialData/SegmentationData")
data <- readxl::read_excel("MaterialData/SegmentationData.xlsx")
data <- readxl::read_excel("MaterialData/SegmentationData.xlsx")
head(data)
data <- readxl::read_excel("MaterialData/Book1.xlsx")
head(data)
# Create a box plot for AgrMn (Mean segmentation agreement scores)
ptsd_boxplot <- ggplot(data, aes(y = AgrMn)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(
title = "Segmentation Agreement Scores for PTSD Participants",
y = "Mean Segmentation Agreement Score (AgrMn)",
x = NULL,
caption = "Figure: Distribution of mean segmentation agreement scores (AgrMn) for participants with PTSD."
) +
theme_minimal()
# Print the plot
print(ptsd_boxplot)
data <- readxl::read_excel("MaterialData/Book1.xlsx")
head(data)
# Create a box plot for AgrMn (Mean segmentation agreement scores)
ptsd_boxplot <- ggplot(data, aes(y = AgrMn)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(
title = "Segmentation Agreement Scores for PTSD Participants",
y = "Mean Segmentation Agreement Score (AgrMn)",
x = NULL,
caption = "Figure: Distribution of mean segmentation agreement scores (AgrMn) for participants with PTSD."
) +
theme_minimal()
# Print the plot
print(ptsd_boxplot)
# Create a box plot for AgrMn (Mean segmentation agreement scores)
ptsd_boxplot <- ggplot(data3, aes(y = AgrMn)) +
geom_boxplot(fill = "lightblue", color = "black") +
labs(
title = "Segmentation Agreement Scores for PTSD Participants",
y = "Mean Segmentation Agreement Score (AgrMn)",
x = NULL,
caption = "Figure: Distribution of mean segmentation agreement scores (AgrMn) for participants with PTSD."
) +
theme_minimal()
data3 <- readxl::read_excel("MaterialData/Book1.xlsx")
head(data)
data3 <- readxl::read_excel("MaterialData/SegmentationAgreement-scored-corr")
data3 <- readxl::read_excel("MaterialData/SegmentationAgreement-scored-corr.xslx")
library(ggplot2)
library(dplyr)
library(readxl)
knitr::opts_chunk$set(echo = FALSE,root.dir = '~/GitHub/ADV-Topics-2---DSR-w-R/Final Project Materials')
data3 <- readxl::read_excel("MaterialData/SegmentationAgreement-scored-corr.xslx")
data3 <- readxl::read_excel("MaterialData/SegmentationAgreement-scored-corr.xlsx")
library(ggplot2)
library(dplyr)
library(readxl)
library(ggthemes)
knitr::opts_chunk$set(echo = FALSE,root.dir = '~/GitHub/ADV-Topics-2---DSR-w-R/Final Project Materials')
# Create a box plot for AgrMov1 (Segmentation Agreement Scores(For coarse and fine grained events (avged out by experimenters)) for First Movie shown to participants)
ptsd_boxplot <- ggplot(clean_data, aes(x = participant_id, y = AgrMov1)) +
geom_point(color = "darkblue") +
labs(
title = "Movie 1 Segmentation Scores among participants",
y = "Segmentation Agreement Scores",
x = "Participant ID's",
caption = "Figure: Distribution of Segmentation Agreement scores for the First Movie viewing for participants."
) +
theme_clean() +
theme(plot.caption = element_text(hjust = 0.5)) +
ylim(0,1) +
geom_hline(yintercept = 0.5, color = "red") #Here is what the "norm" of segmenters should lie, according to experimenters.
library(ggplot2)
library(dplyr)
library(readxl)
library(ggthemes)
knitr::opts_chunk$set(echo = FALSE,root.dir = '~/GitHub/ADV-Topics-2---DSR-w-R/Final Project Materials')
#viewing to make sure that all info from chosen dataset is being processed correctly.
data3 <- readxl::read_excel("MaterialData/SegmentationAgreement-scored-corr.xlsx",sheet = 2 )
head(data3)
# Remove rows where all relevant columns are NA
#These represent participants that left/were unable to complete the scoring assignment.
clean_data <- data3 %>%
filter(rowSums(is.na(select(., AgrMov1:AgrMov3))) != ncol(select(., AgrMov1:AgrMov3)))
tail(clean_data) #checking to make sure that the tailing participants who have null data are erased.
# Create a box plot for AgrMov1 (Segmentation Agreement Scores(For coarse and fine grained events (avged out by experimenters)) for First Movie shown to participants)
ptsd_boxplot <- ggplot(clean_data, aes(x = participant_id, y = AgrMov1)) +
geom_point(color = "darkblue") +
labs(
title = "Movie 1 Segmentation Scores among participants",
y = "Segmentation Agreement Scores",
x = "Participant ID's",
caption = "Figure: Distribution of Segmentation Agreement scores for the First Movie viewing for participants."
) +
theme_clean() +
theme(plot.caption = element_text(hjust = 0.5)) +
ylim(0,1) +
geom_hline(yintercept = 0.5, color = "red") #Here is what the "norm" of segmenters should lie, according to experimenters.
# Print the plot
print(ptsd_boxplot)
library(ggplot2)
library(dplyr)
library(readxl)
library(ggthemes)
knitr::opts_chunk$set(echo = FALSE,warning = FALSE,root.dir = '~/GitHub/ADV-Topics-2---DSR-w-R/Final Project Materials')
#viewing to make sure that all info from chosen dataset is being processed correctly.
data3 <- readxl::read_excel("MaterialData/SegmentationAgreement-scored-corr.xlsx",sheet = 2 )
library(ggplot2)
library(dplyr)
library(readxl)
library(ggthemes)
knitr::opts_chunk$set(echo = FALSE,warning = FALSE,root.dir = '~/GitHub/ADV-Topics-2---DSR-w-R/Final Project Materials')
#viewing to make sure that all info from chosen dataset is being processed correctly.
data3 <- readxl::read_excel("MaterialData/SegmentationAgreement-scored-corr.xlsx",sheet = 2 )
knitr::opts_chunk$set(echo = FALSE,
tidy = FALSE,
root.dir = "~/GitHub/ADV-Topics-2---DSR-w-R/Final Project Materials/Infographic",
message = FALSE,
fig.align = 'center',
out.width = "100%")
options(knitr.table.format = "html")
library(tidyverse)
library(ggplot2)
library(ggdist)
library(readxl)
library(ggthemes)
library(knitr)
library(bibtex)
citation("packages.bib")
knitr::opts_chunk$set(echo = FALSE,
tidy = FALSE,
root.dir = "~/GitHub/ADV-Topics-2---DSR-w-R/Final Project Materials/Infographic",
message = FALSE,
fig.align = 'center',
out.width = "100%")
options(knitr.table.format = "html")
library(tidyverse)
library(ggplot2)
library(ggdist)
library(readxl)
library(ggthemes)
library(knitr)
library(bibtex)
r-refs("packages.bib")
knitr::opts_chunk$set(
echo = FALSE,
fig.align = "center",
message = FALSE,
out.width = "100%",
root.dir = "~/GitHub/ADV-Topics-2---DSR-w-R/Final Project Materials/Infographic",
tidy = FALSE
)
options(knitr.table.format = "html")
library(tidyverse)
library(ggplot2)
library(ggdist)
library(readxl)
library(ggthemes)
library(knitr)
library(bibtex)
r_refs("packages.bib")
knitr::opts_chunk$set(
echo = FALSE,
fig.align = "center",
message = FALSE,
out.width = "100%",
root.dir = "~/GitHub/ADV-Topics-2---DSR-w-R/Final Project Materials/Infographic",
tidy = FALSE
)
options(knitr.table.format = "html")
library(tidyverse)
library(ggplot2)
library(ggdist)
library(readxl)
library(ggthemes)
library(knitr)
library(bibtex)
library("papaja")
r_refs("packages.bib")
knitr::opts_chunk$set(
echo = FALSE,
fig.align = "center",
message = FALSE,
out.width = "100%",
root.dir = "~/GitHub/ADV-Topics-2---DSR-w-R/Final Project Materials/Infographic",
tidy = FALSE
)
options(knitr.table.format = "html")
library(tidyverse)
library(ggplot2)
library(ggdist)
library(readxl)
library(ggthemes)
library(knitr)
library("papaja")
r_refs("packages.bib")
ggplot(clean_data, aes(x = AgrMov1)) +
geom_density(fill = "steelblue", alpha = 0.7) +
labs(
title = "Distribution of Segmentation Agreement Scores",
x = "AGR Mov1 (Segmentation Agreement)",
y = "Density",
caption = "Data Source: Study Dataset"
) +
theme_minimal(base_size = 14)
ggplot(clean_data, aes(x = AgrMov1)) +
geom_density(fill = "steelblue", alpha = 0.7) +
labs(
title = "Distribution of Segmentation Agreement Scores",
x = "AGR Mov1 (Segmentation Agreement)",
y = "Density",
caption = "Data Source: Study Dataset"
) +
theme_minimal(base_size = 14)
ggplot(clean_data, aes(x = AgrMov1)) +
geom_density(fill = "steelblue", alpha = 0.7) +
labs(
title = "Distribution of Segmentation Agreement Scores",
x = "AGR Mov1 (Segmentation Agreement)",
y = "Density",
) +
theme_minimal(base_size = 14)
ggplot(clean_data, aes(x = AgrMov1)) +
geom_density(fill = "steelblue", alpha = 0.7) +
labs(
title = "Distribution of Segmentation Agreement Scores",
x = "AGR Mov1 (Segmentation Agreement)",
y = "Density",
) +
theme_minimal(base_size = 14) + x(0,1) + y(0,5)
ggplot(clean_data, aes(x = AgrMov1)) +
geom_density(fill = "steelblue", alpha = 0.7) +
labs(
title = "Distribution of Segmentation Agreement Scores",
x = "AGR Mov1 (Segmentation Agreement)",
y = "Density",
) +
theme_minimal(base_size = 14) + xlim(0,1) + ylim(0,5)
ggplot(clean_data, aes(x = tleq_score_clean, y = AgrMov1, fill = tleq_score_clean)) +
geom_boxplot(alpha = 0.7, outlier.shape = NA) +
geom_jitter(width = 0.2, alpha = 0.5, color = "darkgray") +
scale_fill_manual(values = c("steelblue", "tomato","yellow")) +
labs(
title = "Segmentation Agreement by PTSD Severity",
x = "PTSD Severity Group",
y = "AGR Mov1 (Segmentation Agreement)",
caption = "Shows median, quartiles, and individual scores"
) +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
ggplot(clean_data, aes(x = tleq_score_clean, y = AgrMov1, fill = tleq_score_clean)) +
geom_boxplot(alpha = 0.7, outlier.shape = NA) +
geom_jitter(width = 0.2, alpha = 0.5, color = "darkgray") +
scale_fill_manual(values = c("steelblue", "tomato","yellow")) +
labs(
title = "Segmentation Agreement by PTSD Severity",
x = "PTSD Severity Group",
y = "AGR Mov1 (Segmentation Agreement)",
caption = "Shows median, quartiles, and individual scores",
) +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
knitr::opts_chunk$set(
echo = FALSE,
fig.align = "center",
message = FALSE,
out.width = "100%",
root.dir = "~/GitHub/ADV-Topics-2---DSR-w-R/Final Project Materials/Infographic",
tidy = FALSE
)
options(knitr.table.format = "html")
library(tidyverse)
library(ggplot2)
library(ggdist)
library(readxl)
library(ggthemes)
library(knitr)
library("papaja")
r_refs("packages.bib")
#viewing to make sure that all info from chosen dataset is being processed correctly.
# Adjusting relative path
#Taking Distress List from TLEQ and adding it to Segmentation Agreement dataset
rawdata <- readxl::read_excel("SegmentationAgreement-scored-corr.xlsx", sheet = 2)
head(rawdata)
# Remove rows where all relevant columns are NA
#These represent participants that left/were unable to complete the scoring assignment.
clean_data <- rawdata %>%
filter(rowSums(is.na(select(., AgrMov1:AgrMov3))) != ncol(select(., AgrMov1:AgrMov3)))
tail(clean_data) #checking to make sure that the tailing participants who have null data are erased.
# Clean and standardize TLEQ categories
clean_data <- clean_data %>%
mutate(
tleq_score_clean = case_when(
str_to_lower(Distress) %in% c("considerable", "extreme") ~ "High Distress",
str_to_lower(Distress) %in% c("moderate", "slight by no") ~ "Moderate Distress",
str_to_lower(Distress) %in% c("no distress", "slight", "none happened to me") ~ "Low Distress",
TRUE ~ NA_character_  # Assign NA for unclassifiable cases
)
)
#address NA participants
clean_data <- clean_data %>%
filter(!is.na(tleq_score_clean))
clean_data <- clean_data %>%
mutate(tleq_score_clean = replace_na(tleq_score_clean, "Missing"))
# Group and summarize segmentation scores by TLEQ categories
print(clean_data)
#after combining dataset info from TLEQexcel and the Segmentation Data.
summary_table <- clean_data %>%
group_by(Distress) %>%
summarise(
Mean = mean(AgrMov1, na.rm = TRUE),
Median = median(AgrMov1, na.rm = TRUE),
SD = sd(AgrMov1, na.rm = TRUE),
Min = min(AgrMov1, na.rm = TRUE),
Max = max(AgrMov1, na.rm = TRUE)
)
kable(summary_table, format = "html", caption = "Descriptive Statistics for AGR Mov1")
ggplot(clean_data, aes(x = AgrMov1)) +
geom_density(fill = "steelblue", alpha = 0.7) +
labs(
title = "Distribution of Segmentation Agreement Scores",
x = "AGR Mov1 (Segmentation Agreement)",
y = "Density",
) +
theme_minimal(base_size = 14) + xlim(0,1) + ylim(0,5)
ggplot(clean_data, aes(x = tleq_score_clean, y = AgrMov1, fill = tleq_score_clean)) +
geom_boxplot(alpha = 0.7, outlier.shape = NA) +
geom_jitter(width = 0.2, alpha = 0.5, color = "darkgray") +
scale_fill_manual(values = c("steelblue", "tomato","yellow")) +
labs(
title = "Segmentation Agreement by PTSD Severity",
x = "PTSD Severity Group",
y = "AGR Mov1 (Segmentation Agreement)",
caption = "Shows median, quartiles, and individual scores",
) +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
knitr::opts_chunk$set(
echo = FALSE,
fig.align = "center",
message = FALSE,
out.width = "100%",
root.dir = "~/GitHub/ADV-Topics-2---DSR-w-R/Final Project Materials/Infographic",
tidy = FALSE
)
options(knitr.table.format = "html")
library(tidyverse)
library(ggplot2)
library(ggdist)
library(readxl)
library(ggthemes)
library(knitr)
ggplot(clean_data, aes(x = tleq_score_clean, y = AgrMov1, fill = tleq_score_clean)) +
geom_boxplot(alpha = 0.7, outlier.shape = NA) +
geom_jitter(width = 0.2, alpha = 0.5, color = "darkgray") +
scale_fill_manual(values = c("steelblue", "tomato","yellow")) +
labs(
title = "Segmentation Agreement by PTSD Severity",
x = "PTSD Severity Group",
y = "AGR Mov1 (Segmentation Agreement)",
caption = "Shows median, quartiles, and individual scores",
) +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
ggplot(clean_data, aes(x = tleq_score_clean, y = AgrMov1, fill = tleq_score_clean)) +
geom_boxplot(alpha = 0.7, outlier.shape = NA) +
geom_jitter(width = 0.2, alpha = 0.5, color = "darkgray") +
scale_fill_manual(values = c("steelblue", "tomato","yellow")) +
labs(
title = "Segmentation Agreement by PTSD Severity",
x = "PTSD Severity Group",
y = "AGR Mov1 (Segmentation Agreement)",
) +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
knitr::opts_chunk$set(
echo = FALSE,
fig.align = "center",
message = FALSE,
out.width = "100%",
root.dir = "~/GitHub/ADV-Topics-2---DSR-w-R/Final Project Materials/Infographic",
tidy = FALSE
)
options(knitr.table.format = "html")
library(tidyverse)
library(ggplot2)
library(ggdist)
library(readxl)
library(ggthemes)
library(knitr)
#viewing to make sure that all info from chosen dataset is being processed correctly.
# Adjusting relative path
#Taking Distress List from TLEQ and adding it to Segmentation Agreement dataset
rawdata <- readxl::read_excel("SegmentationAgreement-scored-corr.xlsx", sheet = 2)
head(rawdata)
# Remove rows where all relevant columns are NA
#These represent participants that left/were unable to complete the scoring assignment.
clean_data <- rawdata %>%
filter(rowSums(is.na(select(., AgrMov1:AgrMov3))) != ncol(select(., AgrMov1:AgrMov3)))
tail(clean_data) #checking to make sure that the tailing participants who have null data are erased.
# Clean and standardize TLEQ categories
clean_data <- clean_data %>%
mutate(
tleq_score_clean = case_when(
str_to_lower(Distress) %in% c("considerable", "extreme") ~ "High Distress",
str_to_lower(Distress) %in% c("moderate", "slight by no") ~ "Moderate Distress",
str_to_lower(Distress) %in% c("no distress", "slight", "none happened to me") ~ "Low Distress",
TRUE ~ NA_character_  # Assign NA for unclassifiable cases
)
)
#address NA participants
clean_data <- clean_data %>%
filter(!is.na(tleq_score_clean))
clean_data <- clean_data %>%
mutate(tleq_score_clean = replace_na(tleq_score_clean, "Missing"))
# Group and summarize segmentation scores by TLEQ categories
print(clean_data)
#after combining dataset info from TLEQexcel and the Segmentation Data.
summary_table <- clean_data %>%
group_by(Distress) %>%
summarise(
Mean = mean(AgrMov1, na.rm = TRUE),
Median = median(AgrMov1, na.rm = TRUE),
SD = sd(AgrMov1, na.rm = TRUE),
Min = min(AgrMov1, na.rm = TRUE),
Max = max(AgrMov1, na.rm = TRUE)
)
kable(summary_table, format = "html", caption = "Descriptive Statistics for AGR Mov1")
ggplot(clean_data, aes(x = AgrMov1)) +
geom_density(fill = "steelblue", alpha = 0.7) +
labs(
title = "Distribution of Segmentation Agreement Scores",
x = "AGR Mov1 (Segmentation Agreement)",
y = "Density",
) +
theme_minimal(base_size = 14) + xlim(0,1) + ylim(0,5)
